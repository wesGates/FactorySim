#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,_TMP_ADD10_OUT)
  __DECLARE_VAR(BOOL,_TMP_EQ13_OUT)
  __DECLARE_VAR(UINT,_TMP_SEL15_OUT)
  __DECLARE_VAR(BOOL,_TMP_AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// PROGRAM PROGRAM0
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,SMALLBOX)
  __DECLARE_VAR(BOOL,MATERIAL)

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_LOCATED(BOOL,FACTORYIORESET)
  __DECLARE_LOCATED(BOOL,START)
  __DECLARE_LOCATED(BOOL,EMERGENCYSTOP)
  __DECLARE_LOCATED(BOOL,RETROREFLECT0)
  __DECLARE_LOCATED(BOOL,RETROREFLECT1)
  __DECLARE_LOCATED(BOOL,RETROREFLECT2)
  __DECLARE_LOCATED(BOOL,RETROREFLECT3)
  __DECLARE_LOCATED(BOOL,TURNTABLEBACKLIMIT)
  __DECLARE_LOCATED(BOOL,TURNTABLEFRONTLIMIT)
  __DECLARE_LOCATED(BOOL,TURNTABLELIMIT0)
  __DECLARE_LOCATED(BOOL,TURNTABLELIMIT90)
  __DECLARE_LOCATED(BOOL,LIGHTARRAY7SMALLBOX)
  __DECLARE_LOCATED(BOOL,CONVEY6M_0)
  __DECLARE_LOCATED(BOOL,TURNTABLE0ROLLPLUS)
  __DECLARE_LOCATED(BOOL,TURNTABLE0TURN)
  __DECLARE_LOCATED(BOOL,CONVEY6M_1)
  RS RS0;
  RS RS1;
  RS RS2;
  RS RS3;
  RS RS4;
  RS RS5;
  RS RS6;
  RS RS7;
  RS RS8;
  RS RS9;
  __DECLARE_LOCATED(BOOL,STACKLIGHTGREEN)
  __DECLARE_LOCATED(BOOL,STACKLIGHTYELLOW)
  __DECLARE_LOCATED(BOOL,STACKLIGHTRED)
  RS RS10;
  R_TRIG R_TRIG1;
  R_TRIG R_TRIG2;
  R_TRIG R_TRIG3;
  R_TRIG R_TRIG4;
  F_TRIG F_TRIG1;
  R_TRIG R_TRIG5;
  R_TRIG R_TRIG6;
  R_TRIG R_TRIG7;
  F_TRIG F_TRIG2;
  R_TRIG R_TRIG8;
  F_TRIG F_TRIG3;
  R_TRIG R_TRIG9;
  R_TRIG R_TRIG10;
  R_TRIG R_TRIG11;
  F_TRIG F_TRIG4;
  R_TRIG R_TRIG12;
  R_TRIG R_TRIG13;
  F_TRIG F_TRIG5;
  R_TRIG R_TRIG14;
  R_TRIG R_TRIG15;
  R_TRIG R_TRIG16;
  R_TRIG R_TRIG17;
  R_TRIG R_TRIG18;
  R_TRIG R_TRIG19;
  R_TRIG R_TRIG20;
  R_TRIG R_TRIG21;
  R_TRIG R_TRIG22;
  F_TRIG F_TRIG6;
  R_TRIG R_TRIG23;
  F_TRIG F_TRIG7;

} PROGRAM0;

void PROGRAM0_init__(PROGRAM0 *data__, BOOL retain);
// Code part
void PROGRAM0_body__(PROGRAM0 *data__);
#endif //__POUS_H
